- hosts: all
  tasks:
    - name: Check if Docker container exists
      docker_container_info:
        name: app
      register: container_info
      ignore_errors: yes

    - name: Stop the Docker container if it exists
      docker_container:
        name: app
        state: stopped
      when: container_info.containers | length > 0

    - name: Clear old images and containers
      community.docker.docker_prune:
        containers: true
        images: true

    - name: Start docker container
      community.docker.docker_container:
        name: app
        image: "chernenkoivan/plata:{{ VERSION }}"
        restart_policy: always
        state: started
        ports:
          - 80:80
        env: HOST="0.0.0.0"
          PORT="80"
          DB_PASSWORD="{{ DB_PASSWORD }}"
          DB_USERNAME="{{ DB_USERNAME }}"
          DB_HOST="{{ DB_HOST }}"
          DB_PORT="{{ DB_PORT }}"
          DB_NAME="{{ DB_NAME }}"
